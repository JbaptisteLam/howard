{
  "language": "english",
  "target": "'/usr/local/Caskroom/miniconda/base/bin/python' -u '/Users/lebechea/BIOINFO/git/HOWARD/howard/gui.py'",
  "suppress_gooey_flag": false,
  "program_name": "HOWARD",
  "program_description": "Graphical User Interface of HOWARD",
  "sidebar_title": "Actions",
  "default_size": [
    610,
    530
  ],
  "auto_start": false,
  "show_advanced": true,
  "run_validators": true,
  "encoding": "utf-8",
  "show_stop_warning": true,
  "show_success_modal": true,
  "show_failure_modal": true,
  "force_stop_is_error": true,
  "poll_external_updates": false,
  "return_to_config": false,
  "show_restart_button": true,
  "requires_shell": true,
  "menu": [],
  "clear_before_run": false,
  "fullscreen": false,
  "use_legacy_titles": true,
  "num_required_cols": 2,
  "num_optional_cols": 2,
  "manual_start": false,
  "monospace_display": false,
  "image_dir": "::gooey/default",
  "language_dir": "/usr/local/Caskroom/miniconda/base/lib/python3.9/site-packages/gooey/languages",
  "progress_regex": null,
  "progress_expr": null,
  "hide_progress_msg": false,
  "timing_options": {
    "show_time_remaining": false,
    "hide_time_remaining_on_complete": true
  },
  "disable_progress_bar_animation": false,
  "disable_stop_button": false,
  "navigation": "SIDEBAR",
  "show_sidebar": false,
  "tabbed_groups": false,
  "group_by_type": true,
  "body_bg_color": "#f0f0f0",
  "header_bg_color": "#ffffff",
  "header_height": 80,
  "header_show_title": true,
  "header_show_subtitle": true,
  "header_image_center": false,
  "footer_bg_color": "#f0f0f0",
  "sidebar_bg_color": "#f2f2f2",
  "terminal_panel_color": "#F0F0F0",
  "terminal_font_color": "#000000",
  "terminal_font_family": null,
  "terminal_font_weight": 400,
  "terminal_font_size": null,
  "richtext_controls": false,
  "error_color": "#ea7878",
  "layout": "standard",
  "widgets": {
    "gui.py": {
      "command": "::gooey/default",
      "name": "gui.py",
      "help": null,
      "description": "",
      "contents": [
        {
          "name": "required_args_msg",
          "items": [
            {
              "id": "input",
              "type": "FileChooser",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "input",
                "help": "Input file path\nFormat: BCF, VCF, TSV, CSV, PSV, Parquet or duckDB\nFiles can be compressesd (e.g. vcf.gz, tsv.gz)",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "input"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "output",
              "type": "FileChooser",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "output",
                "help": "Output file path\nFormat: BCF, VCF, TSV, CSV, PSV, Parquet or duckDB\nFiles can be compressesd (e.g. vcf.gz, tsv.gz)",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "output"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "explode_infos",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "explode_infos",
                "help": "Explode VCF INFO/Tag into 'variants' table columns.\ndefault: False",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "explode_infos"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "explode_infos_prefix",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "explode_infos_prefix",
                "help": "Explode VCF INFO/Tag with a specific prefix.\ndefault: ''",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "explode_infos_prefix"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "explode_infos_fields",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "explode_infos_fields",
                "help": "Explode VCF INFO/Tag specific fields/tags.\nKeyword '*' specify all available fields, except those already specified.\nPattern (regex) can be used: '.*_score' for fields named with '_score' at the end.\nExamples:\n   - 'HGVS,SIFT,Clinvar' (list of fields)\n   - 'HGVS,*,Clinvar' (list of fields with all other fields at the end)\n   - 'HGVS,.*_score,Clinvar' (list of 2 fields with all scores in the middle)\n   - 'HGVS,.*_score,*' (1 field, scores, all other fields)\n   - 'HGVS,*,.*_score' (1 field and all other fields,\n                        scores included in other fields)\ndefault: '*'",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "explode_infos_fields"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "order_by",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "order_by",
                "help": "List of columns to sort the result-set in ascending or descending order.\nUse SQL format, and keywords ASC (ascending) and DESC (descending).\nIf a column is not available, order will not be considered.\nOrder is enable only for compatible format (e.g. TSV, CSV, JSON).\nExamples:\n   - 'ACMG_score DESC'\n   - 'PZFlag DESC, PZScore DESC'\ndefault: ''",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "order_by"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "include_header",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "include_header",
                "help": "Include header (in VCF format) in output file.\nOnly for compatible formats (tab-delimiter format as TSV or BED).\ndefault: False",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "include_header"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            },
            {
              "id": "parquet_partitions",
              "type": "TextField",
              "cli_type": "positional",
              "required": true,
              "data": {
                "display_name": "parquet_partitions",
                "help": "Parquet partitioning using huve (only for Parquet export format).\nThis option is is faster parallel writing, but memory consuming.\nUse 'None' (string) for NO partition but split parquet files into a folder\nexamples: '#CHROM', '#CHROM,REF', 'None'\ndefault: None",
                "required": true,
                "nargs": "",
                "commands": [],
                "choices": [],
                "default": null,
                "dest": "parquet_partitions"
              },
              "options": {
                "error_color": "#ea7878",
                "label_color": "#000000",
                "help_color": "#363636",
                "full_width": false,
                "validator": {
                  "type": "ExpressionValidator",
                  "test": "user_input and not user_input.isspace()",
                  "message": "This field is required"
                },
                "external_validator": {
                  "cmd": ""
                }
              }
            }
          ],
          "groups": [],
          "description": null,
          "options": {
            "label_color": "#000000",
            "description_color": "#363636",
            "legacy": {
              "required_cols": 2,
              "optional_cols": 2
            },
            "columns": 2,
            "padding": 10,
            "show_border": false
          }
        }
      ]
    }
  }
}